<% /**
*      Copyright (C) 2008 10gen Inc.
*  
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*  
*       http://www.apache.org/licenses/LICENSE-2.0
*  
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/ %>

<%
/*
 *   DJANG10 - core mapper
 *   Invokes the projects url file
 * first, get the url patterns from the project "urls" file
 *
 *  each URL pattern is an array of [ regex, fn] where
 *
 *  fn = <site>.<app>.<filename>.<functionname>
 */

core.modules.djang10.http();

core.modules.djang10.mapper_filter();
    
var match_array = [];
var duple = null;

var thing = MapperFilter.matchURI(request.getURI());

if (thing != null) {
    match_array = thing.match_array;
    duple = thing.duple;
}

// if we don't have an invoker,do whatever show a framework error page
// @TODO - figure out what django really does

if (duple == null) {
    core.modules.djang10.conf.errorPage("No invoker specified for " + request.getURI());
}
else {

    // now  invoke the function in the package in a private global scope.  We can shove the
    // request object as the first arg, just replacing the full match string that's there
    // rather than waste the time of getting a new arg array

    match_array[0] = new HttpRequest(request);

    var scp = duple.s;
    var func = scp[duple.f];

    // @TODO - move this to mapper as we can tell earlier and warn on deployment
    
    if (func != null) {
        var httpResp = func.apply(null, match_array);
        print(httpResp.getContent());
    }
    else {
        log.djang10app("ERROR - function \"" + duple.f + "\" doesn't exist");
        core.modules.djang10.conf.errorPage("Programmer error : unknown function in controller for  " + request.getURI());
    }
}
%>
